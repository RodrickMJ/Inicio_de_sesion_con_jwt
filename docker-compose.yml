version: '3.4'
services:
  coworking:
    container_name: coworking-api
    build:
      context: ./
      dockerfile: DockerFile
    environment:
      - PORT=3001
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - coworking-network
  
  coworking-2:
    container_name: coworking-api-2
    build:
      context: ./
      dockerfile: DockerFile
    environment:
      - PORT=3002
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - coworking-network

  coworking-3:
    container_name: coworking-api-3
    build:
      context: ./
      dockerfile: DockerFile
    environment:
      - PORT=3003
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - coworking-network
  
  coworking-nginx:
    image: nginx:alpine
    container_name: coworking-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - coworking-network
  coworking-db:
    image: mysql:8.0.21
    container_name: coworking-db
    restart: always
    tty: true
    ports:
      - "33060:3306"
    environment:
      MYSQL_DATABASE: coworking_db
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql:delegated
    networks:
      - coworking-network
    command:
      - --default-authentication-plugin=mysql_native_password
      - --sort_buffer_size=1073741824
      - --max_connections=1000
networks:
  coworking-network:
    driver: bridge

volumes:
  dbdata:
    driver: local